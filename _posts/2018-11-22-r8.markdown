---
layout: post
title: "Research 8: Read and have a look at the most common random generators"

date:   2018-11-15 14:21:21 +0200
categories:
  - statistics
  - research
tag:
- research
---
A random number generator (RNG) is a device that generates a sequence of numbers or symbols that cannot be reasonably predicted better than by a random chance. Random number generators can be true hardware random-number generators (HRNG), which generate genuinely random numbers, or pseudo-random number generators (PRNG) which generate numbers which look random, but are actually deterministic, and can be reproduced if the state of the PRNG is known.

So a pseudorandom number generator (PRNG), also known as a deterministic random bit generator (DRBG), is an algorithm for generating a sequence of numbers whose properties approximate the properties of sequences of random numbers. The PRNG-generated sequence is not truly random, because it is completely determined by an initial value, called the PRNG's seed (which may include truly random values).

There exist several computational methods for pseudo-random number generation, but all fall short of the goal of true randomness, although they may meet, with varying success, some of the statistical tests for randomness intended to measure how unpredictable their results are.

The generation of pseudo-random numbers is an important and common task in computer programming especially in Cryptography.

Let's define formally what a PRG is in crypto:
<img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/d6c54f204de3aa46505e3cfd6f6c3826f032e781"/>

we just wrote simply that the probability to distinguish a real random number take from uniform distribution from a number generated by the PRG must be negligible.

Here is a list of most commond random generators:

Middle-square method 	1946 	J. von Neumann 	 	In its original form, it's of poor quality and of historical interest only.
Lehmer generator 	1951 	D. H. Lehmer 	 	One of the very earliest and most influential design.
Linear congruential generator (LCG) 	1958 	W. E. Thomson; A. Rotenberg 	A generalisation of the Lehmer generator and historically the most influential and studied generator.
Lagged Fibonacci generator (LFG) 	1958 	G. J. Mitchell and D. P. Moore 	 	
Linear feedback shift register (LFSR) 	1965 	R. C. Tausworthe 	 	A hugely influential design. Also called Tausworthe generators.
Wichmann–Hill generator 	1982 	B. A. Wichmann and D. I. Hill 	 	A combination of three small LCGs, suited to 16-bit CPUs. Widely used in many programs, e.g. it is used in Excel 2003 and later versions for the function RAND and it was the default generator in the language Python up to version 2.2.
Rule 30 	1983 	S. Wolfram 	 	Based on cellular automata.
Inversive congruential generator (ICG) 	1986 	J. Eichenauer and J. Lehn 	 	
Park-Miller generator 	1988 	S. K. Park and K. W. Miller 	 	A specific implementation of a Lehmer generator, widely used because built-in in the C and C++ languages as the function `minstd'.
MIXMAX generator 	1991 	G. K. Savvidy and N. G. Ter-Arutyunyan-Savvidy 	 	It is a member of the class of matrix linear congruential generator, a generalisation of LCG. The rationale behind the MIXMAX family of generators relies on results from ergodic theory and classical mechanics.
Add-with-carry (AWC) 	1991 	G. Marsaglia and A. Zaman 	 	A modification of Lagged-Fibonacci generators.
Subtract-with-borrow (SWC) 	1991 	G. Marsaglia and A. Zaman 	A modification of Lagged-Fibonacci generators. A SWB generator is the basis for the RANLUX generator, widely used e.g. for particle physics simulations.
Maximally periodic reciprocals 	1992 	R. A. J. Matthews 	 	A method with roots in number theory, although never used in practical applications.
KISS 	1993 	G. Marsaglia 	 	Prototypical example of a combination generator.
Multiply-with-carry (MWC) 	1994 	G. Marsaglia; C. Koç  	
Complementary-multiply-with-carry (CMWC) 	1997 	R. Couture and P. L’Ecuyer 	 	
Mersenne Twister (MT) 	1998 	M. Matsumoto and T. Nishimura 	 	Closely related with LFSRs. In its MT19937 implementation is probably the most commonly used modern PRNG. Default generator in the Python language starting from version 2.3.
Xorshift 	2003 	G. Marsaglia 	 	It is a very fast sub-type of LFSR generators. Marsaglia also suggested as an improvement the xorwow generator, in which the output of a xorshift generator is added with a Weyl sequence. The xorwow generator is the default generator is the CURAND library of the nVidia CUDA application programming interface for graphics processing units.
Well equidistributed long-period linear (WELL) 	2006 	F. Panneton, P. L'Ecuyer and M. Matsumoto 	 	A LFSR closely related with Mersenne Twister, aiming at remedying some of its shortcomings.
A small noncryptographic PRNG (JSF) 	2009 	Bob Jenkins 	 	
Advanced Randomization System (ARS) 	2011 	J. Salmon, M. Moraes, R. Dror and D. Shaw 	 	A simplified version of the AES block cipher, leading to very fast performance on system supporting the AES-NI.
Threefry 	2011 	J. Salmon, M. Moraes, R. Dror and D. Shaw 	 	A simplified version of the Threefish block cipher, suitable for GPU implementations.
Philox 	2011 	J. Salmon, M. Moraes, R. Dror and D. Shaw 	 	A simplification and modification of the block cipher Threefish with the addition of an S-box.
SplitMix 	2014 	G. L. Steele, D. Lea and C. H. Flood 	 	Based upon the final mixing function of MurmurHash3. Included in Java Development Kit 8 and above.
Permuted Congruential Generator (PCG) 	2014 	M. E. O'Neill 	 	A modification of LCG.
Xoroshiro128+ 	2018 	D. Blackman, S. Vigna 	 	A modification of Marsaglia's Xoroshift generators, one of the fastest generators on modern 64-bit CPUs. 
